# RUN TESTS AND FULL CONDA BUILD MATRIX EVERY NIGHT AT 4AM
schedules:
- cron: "0 4 * * *"
  displayName: Nightly full build
  branches:
    include:
    - develop


stages:
  - stage: 'Quick_env_test'
    displayName: 'simple pytest'

    jobs:
    - job:
      displayName: 'pytest @ develop environment'

      pool:
          vmImage: 'ubuntu-latest'
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.7'
          displayName: 'Use Python 3.7'

        - checkout: self
          path: pytools

        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              cd $(System.DefaultWorkingDirectory)
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/src
              conda env create -f environment.yml
              conda activate pytools-develop
              cd $(System.DefaultWorkingDirectory)
              pip install pytest-azurepipelines
              coverage run -m pytest test/test/
              coverage xml
              coverage html
          displayName: 'Pytest'

        - task: PublishTestResults@2
          condition: succeededOrFailed()
          inputs:
            testResultsFiles: '$(System.DefaultWorkingDirectory)/*.xml'
            searchFolder: '$(System.DefaultWorkingDirectory)'
            testRunTitle: 'Publish test results'

        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
            reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov'

  # CONDA ENV BUILD TEST
  # TESTING MATRIX OF PYTHON & SKLEARN VERSIONS
  # - FOR RELEASE BRANCH: 3 BUILD TESTS
  # - OTHERWISE: 1 BUILD TEST
  - stage: 'Conda_build_test'
    # we are testing here so no need to run a separate pytest outside of the conda build
    # dependsOn:
    #   - 'Quick_env_test'
    displayName: 'conda build & pytest'

    jobs:
    - job:
      displayName: 'single build & pytest'
      condition: |
        not(or(contains(variables['Build.SourceBranch'], 'refs/heads/release'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        eq(variables['Build.Reason'], 'Schedule')))

      pool:
          vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          maximum_dependencies:
            FACET_V_PYTHON_BUILD: '3.8'
            FACET_V_PANDAS: '==1.0.0'
            FACET_V_NUMPY: '=>1.16'
            FACET_V_JOBLIB: '>=0.13'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(FACET_V_PYTHON_BUILD)'
          displayName: 'Use Python $(FACET_V_PYTHON_BUILD)'

        - checkout: self
          path: pytools

        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/src
              export FACET_V_PYTHON_BUILD=$(FACET_V_PYTHON_BUILD)
              export FACET_V_PANDAS=$(FACET_V_PANDAS)
              export FACET_V_JOBLIB=$(FACET_V_JOBLIB)
              export FACET_V_NUMPY=$(FACET_V_NUMPY)
              conda activate pytools-develop
              conda install -y conda-build
              cd $(System.DefaultWorkingDirectory)
              make package
          displayName: "build & test conda package"

    - job:
      displayName: 'matrix build & pytest'
      condition: |
        or(contains(variables['Build.SourceBranch'], 'refs/heads/release'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        eq(variables['Build.Reason'], 'Schedule'))

      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          minimum_dependencies:
            FACET_V_PYTHON_BUILD: '3.6'
            FACET_V_PANDAS: '==0.24'
            FACET_V_JOBLIB: '==0.13'
            FACET_V_NUMPY: '==1.16'
          maximum dependencies:
            FACET_V_PYTHON_BUILD: '3.8'
            FACET_V_PANDAS: '==1.0.0'
            FACET_V_NUMPY: '=>1.16'
            FACET_V_JOBLIB: '>=0.13'
          unconstrained dependencies:
            FACET_V_PYTHON_BUILD: '>=3.6'
            FACET_V_PANDAS: '=>0.24'
            FACET_V_JOBLIB: '=>0.13'
            FACET_V_NUMPY: '=>1.16'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(FACET_V_PYTHON_BUILD)'
          displayName: 'Use Python $(FACET_V_PYTHON_BUILD)'

        - checkout: self
          path: pytools

        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/src
              export FACET_V_PYTHON_BUILD=$(FACET_V_PYTHON_BUILD)
              export FACET_V_PANDAS=$(FACET_V_PANDAS)
              export FACET_V_JOBLIB=$(FACET_V_JOBLIB)
              export FACET_V_NUMPY=$(FACET_V_NUMPY)
              conda activate pytools-develop
              conda install -y conda-build
              cd $(System.DefaultWorkingDirectory)
              make package
          displayName: "build & test conda package"