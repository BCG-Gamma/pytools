trigger:
  - feature/github_pages
#  - master
#  - develop
#  - release/*

#pr:
#  - master
#  - develop

# set the build name
name: $[ variables['branchName'] ]

# run tests and full conda/tox build matrix every night at 4am
schedules:
- cron: "0 4 * * *"
  displayName: Nightly full build
  branches:
    include:
    - develop

variables:
  ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')) }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '') ]
  master_or_release: >
    ${{ or(
    startsWith(variables['branchName'], 'release'),
    eq(variables['branchName'], 'master'),
    eq(variables['Build.Reason'], 'Schedule')
    )
    }}

stages:
  # Render docs and publish to GitHub Pages
  - stage:
    displayName: 'Docs'

    jobs:
    - job:
      displayName: 'Build and publish docs'
      # condition: eq(variables.master_or_release, 'True') # todo: uncomment when ready

      pool:
          vmImage: 'ubuntu-latest'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.7.*'
          displayName: 'use Python 3.7'

        - checkout: self
          path: pytools

        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              set -e
              eval "$(conda shell.bash hook)"
              cd $(System.DefaultWorkingDirectory)
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/pytools/src
              conda env create -f environment.yml
              conda activate pytools-develop
              cd $(System.DefaultWorkingDirectory)/pytools/sphinx/
              python make.py html
              mkdir $(System.DefaultWorkingDirectory)/pytools/docs/
              mv $(System.DefaultWorkingDirectory)/pytools/sphinx/build/html/* $(System.DefaultWorkingDirectory)/pytools/docs/
          displayName: 'render docs'

        - task: Bash@3
          condition: succeededOrFailed()
          inputs:
            targetType: 'inline'
            script: |
              git config --local user.name "Azure Pipelines"
              git config --local user.email "azuredevops@microsoft.com"
              git checkout -b doc/github_pages
              git add .
              git commit -m "Publishing GitHub Pages  ***NO_CI***"
              git push --set-upstream origin doc/github_pages
          displayName: 'publish docs'
