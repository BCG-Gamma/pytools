trigger:
  - master
  - develop
  - release/*

pr:
  - master
  - develop

# set the build name
name: $[ variables['branchName'] ]

# run tests and full conda/tox build matrix every night at 4am
schedules:
- cron: "0 4 * * *"
  displayName: Nightly full build
  branches:
    include:
    - develop

variables:
  ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')) }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', '') ]
  master_or_release: >
    ${{ or(
    startsWith(variables['branchName'], 'release'),
    eq(variables['branchName'], 'master'),
    eq(variables['Build.Reason'], 'Schedule')
    )
    }}

stages:
  # Render docs and publish to GitHub Pages
  - stage:
    displayName: 'Docs'

    jobs:
    - job:
      displayName: 'Build and publish docs'
      # condition: eq(variables.master_or_release, 'True') # todo: uncomment when ready

      pool:
          vmImage: 'ubuntu-latest'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.7.*'
          displayName: 'use Python 3.7'

        - checkout: self
          path: pytools

        - script: dir $(Build.SourcesDirectory)

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              set -e
              eval "$(conda shell.bash hook)"
              cd $(System.DefaultWorkingDirectory)
              export PYTHONPATH=$(System.DefaultWorkingDirectory)/src
              conda env create -f environment.yml
              conda activate pytools-develop
              python sphinx/make.py html
          displayName: 'Render docs'

        - task: InstallSSHKey@0
          inputs:
            knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
            sshPublicKey: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICPIrZWnxJjycCOpCHNTXRrNM+EFGZOB+cHLW0tH2wwo azuredevops@microsoft.com'
            sshKeySecureFile: 'deploy_docs'
          displayName: 'Install the deploy SSH key'

        - task: Bash@3
          condition: succeededOrFailed()
          inputs:
            targetType: 'inline'
            script: |
              set -e
              echo "Current directory contents:"
              dir
              echo "Adjusting git credentials"
              git config --global user.name "Azure Pipelines"
              git config --global user.email "azuredevops@microsoft.com"
              git config --global url.ssh://git@github.com/.insteadOf https://github.com/
              git checkout --track origin/github-pages
              python sphinx/make.py prepare_docs_deployment
              git status
              git add docs
              echo "Staged docs HTML build"
              git status
              git commit -m "Publishing GitHub Pages [skip ci]"
              echo "Committed to local branch github-pages"
              git push --set-upstream origin github-pages
          displayName: 'Publish docs'
